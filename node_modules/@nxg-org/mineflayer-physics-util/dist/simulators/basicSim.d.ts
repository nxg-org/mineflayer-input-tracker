import { Entity } from "prismarine-entity";
import { IPhysics } from "../physics/engines";
import { EPhysicsCtx } from "../physics/settings";
import { Vec3 } from "vec3";
import { BaseSimulator } from "./baseSimulator";
import md from "minecraft-data";
export declare class BasicSim extends BaseSimulator {
    readonly ctx: IPhysics;
    constructor(ctx: IPhysics);
    simXTicksRaw(mdEntity: md.Entity, world: any, ticks?: number, options?: Partial<Entity>): import("..").EntityState;
    simXTicks(entity: Entity, world: any, ticks: number): import("..").EntityState;
    simXTicksPrebuilt(ctx: EPhysicsCtx, world: any, ticks: number): import("..").EntityState;
    simUntilOnGroundRaw(mdEntity: md.Entity, world: any, ticks?: number, options?: Partial<Entity>): import("..").EntityState;
    simUntilOnGround(entity: Entity, world: any, ticks?: number): import("..").EntityState;
    simUntilOnGroundPrebuilt(ctx: EPhysicsCtx, world: any, ticks?: number): import("..").EntityState;
    simUntilDestinationRaw(mdEntity: md.Entity, destination: Vec3, world: any, ticks?: number, options?: Partial<Entity>): import("..").EntityState;
    simUntilDestination(entity: Entity, destination: Vec3, world: any, ticks?: number): import("..").EntityState;
    simUntilDestinationPrebuilt(ctx: EPhysicsCtx, destination: Vec3, world: any, ticks?: number): import("..").EntityState;
}
