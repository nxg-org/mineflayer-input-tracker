"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MovementFunctions = void 0;
class MovementFunctions {
    constructor(bot) {
        this.bot = bot;
    }
    forceLook(yaw, pitch, update = false, onGround) {
        const notchianYawAndPitch = { yaw: this.bot.util.math.toNotchianYaw(yaw), pitch: this.bot.util.math.toNotchianPitch(pitch) };
        this.bot._client.write("look", Object.assign(Object.assign({}, notchianYawAndPitch), { onGround: onGround !== null && onGround !== void 0 ? onGround : this.bot.entity.onGround }));
        if (update) {
            this.bot.look(yaw, pitch, true);
        }
    }
    forceLookAt(pos, update = false, onGround) {
        const { yaw, pitch } = this.bot.util.math.pointToYawAndPitch(this.bot, pos);
        const nyp = { yaw: this.bot.util.math.toNotchianYaw(yaw), pitch: this.bot.util.math.toNotchianPitch(pitch) };
        this.bot._client.write("look", Object.assign(Object.assign({}, nyp), { onGround: onGround !== null && onGround !== void 0 ? onGround : this.bot.entity.onGround }));
        if (update) {
            this.bot.look(yaw, pitch, true);
        }
    }
    lazyTeleport(endPos) { }
}
exports.MovementFunctions = MovementFunctions;
